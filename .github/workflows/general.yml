---
name: general

"on":
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Setup task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run install
        run: task fe:install

      - name: Run generate
        run: task fe:generate

      - name: Run lint
        run: task fe:lint

      - name: Run unittest
        run: task fe:test

      - name: Run build
        run: task fe:build

      - name: Upload frontend
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: pkg/frontend/files/
          retention-days: 1
          if-no-files-found: error

  backend:
    runs-on: ubuntu-latest
    needs: frontend

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Setup task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch frontend
        uses: actions/download-artifact@v5
        with:
          name: frontend
          path: pkg/frontend/files/

      - name: Run generate
        run: task be:generate

      - name: Run vet
        run: task be:vet

      - name: Server golangci
        run: task be:golangci

      - name: Run lint
        run: task be:lint

      - name: Run test
        run: task be:test

      - name: Run build
        run: task be:build

      - name: Coverage report
        if: github.ref == 'refs/heads/master'
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.out
          force-coverage-parser: go

...
