// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API definition for Gopad",
    "title": "Gopad OpenAPI",
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0-alpha1"
  },
  "host": "try.gopad.eu",
  "basePath": "/api/v1",
  "paths": {
    "/auth/login": {
      "post": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "Authenticate an user by credentials",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "The credentials to authenticate",
            "name": "auth_login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A generated token with expire",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "401": {
            "description": "Unauthorized if wrong credentials",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh an auth token before it expires",
        "operationId": "RefreshAuth",
        "responses": {
          "200": {
            "description": "A refreshed token with expire",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "401": {
            "description": "Unauthorized if failed to generate",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify validity for an authentication token",
        "operationId": "VerifyAuth",
        "responses": {
          "200": {
            "description": "Meta data of the provided token",
            "schema": {
              "$ref": "#/definitions/auth_verify"
            }
          },
          "401": {
            "description": "Unauthorized if token is invalid",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/profile/self": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Fetch profile details of the personal account",
        "operationId": "ShowProfile",
        "responses": {
          "200": {
            "description": "The current profile data",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "profile"
        ],
        "summary": "Update your own profile information",
        "operationId": "UpdateProfile",
        "parameters": [
          {
            "description": "The profile data to update",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated profile data",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/profile/token": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Retrieve an unlimited auth token",
        "operationId": "TokenProfile",
        "responses": {
          "200": {
            "description": "The unlimited auth token",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "500": {
            "description": "Failed to generate a token",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch all available teams",
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A collection of teams",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Create a new team",
        "operationId": "CreateTeam",
        "parameters": [
          {
            "description": "The team data to create",
            "name": "team",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "$ref": "#/definitions/team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created team data",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch a specific team",
        "operationId": "ShowTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched team details",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "team"
        ],
        "summary": "Update a specific team",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team data to update",
            "name": "team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated team details",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Delete a specific team",
        "operationId": "DeleteTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "400": {
            "description": "Failed to delete the team",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/users": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch all users assigned to team",
        "operationId": "ListTeamUsers",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of team users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team_user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "team"
        ],
        "summary": "Update user perms for team",
        "operationId": "PermitTeamUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to update",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Assign a user to team",
        "operationId": "AppendTeamToUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to assign",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is already assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Remove a user from team",
        "operationId": "DeleteTeamFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to delete",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch all available users",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A collection of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "The user data to create",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "password",
                "email"
              ],
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created user data",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch a specific user",
        "operationId": "ShowUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched user details",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a specific user",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user data to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated user details",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete a specific user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "400": {
            "description": "Failed to delete the user",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users/{user_id}/teams": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch all teams assigned to user",
        "operationId": "ListUserTeams",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user teams",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team_user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update team perms for user",
        "operationId": "PermitUserTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to update",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Assign a team to user",
        "operationId": "AppendUserToTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to assign",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is already assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Remove a team from user",
        "operationId": "DeleteUserFromTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to delete",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "team_id"
              ],
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "auth_login": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "format": "password"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "auth_token": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "token": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "auth_verify": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "username": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "general_error": {
      "description": "General error for regular HTTP status codes",
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "profile": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "readOnly": true
        },
        "admin": {
          "type": "boolean",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "team": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        }
      }
    },
    "team_user": {
      "type": "object",
      "required": [
        "team_id",
        "user_id",
        "perm"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "team": {
          "type": "object",
          "$ref": "#/definitions/team",
          "readOnly": true
        },
        "team_id": {
          "type": "string",
          "format": "uuid"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user": {
          "type": "object",
          "$ref": "#/definitions/user",
          "readOnly": true
        },
        "user_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "team_user_params": {
      "type": "object",
      "required": [
        "user",
        "perm"
      ],
      "properties": {
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "user": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": true
        },
        "admin": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "user_team_params": {
      "type": "object",
      "required": [
        "team",
        "perm"
      ],
      "properties": {
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "team": {
          "type": "string"
        }
      }
    },
    "validation_error": {
      "description": "Validation error which shows failed fields",
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "Header": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "Basic": []
    },
    {
      "Header": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API definition for Gopad",
    "title": "Gopad OpenAPI",
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0-alpha1"
  },
  "host": "try.gopad.eu",
  "basePath": "/api/v1",
  "paths": {
    "/auth/login": {
      "post": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "Authenticate an user by credentials",
        "operationId": "LoginUser",
        "parameters": [
          {
            "description": "The credentials to authenticate",
            "name": "auth_login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A generated token with expire",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "401": {
            "description": "Unauthorized if wrong credentials",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh an auth token before it expires",
        "operationId": "RefreshAuth",
        "responses": {
          "200": {
            "description": "A refreshed token with expire",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "401": {
            "description": "Unauthorized if failed to generate",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify validity for an authentication token",
        "operationId": "VerifyAuth",
        "responses": {
          "200": {
            "description": "Meta data of the provided token",
            "schema": {
              "$ref": "#/definitions/auth_verify"
            }
          },
          "401": {
            "description": "Unauthorized if token is invalid",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/profile/self": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Fetch profile details of the personal account",
        "operationId": "ShowProfile",
        "responses": {
          "200": {
            "description": "The current profile data",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "profile"
        ],
        "summary": "Update your own profile information",
        "operationId": "UpdateProfile",
        "parameters": [
          {
            "description": "The profile data to update",
            "name": "profile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated profile data",
            "schema": {
              "$ref": "#/definitions/profile"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/profile/token": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "Retrieve an unlimited auth token",
        "operationId": "TokenProfile",
        "responses": {
          "200": {
            "description": "The unlimited auth token",
            "schema": {
              "$ref": "#/definitions/auth_token"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "500": {
            "description": "Failed to generate a token",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch all available teams",
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A collection of teams",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Create a new team",
        "operationId": "CreateTeam",
        "parameters": [
          {
            "description": "The team data to create",
            "name": "team",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "$ref": "#/definitions/team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created team data",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch a specific team",
        "operationId": "ShowTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched team details",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "team"
        ],
        "summary": "Update a specific team",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team data to update",
            "name": "team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated team details",
            "schema": {
              "$ref": "#/definitions/team"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Delete a specific team",
        "operationId": "DeleteTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "400": {
            "description": "Failed to delete the team",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/teams/{team_id}/users": {
      "get": {
        "tags": [
          "team"
        ],
        "summary": "Fetch all users assigned to team",
        "operationId": "ListTeamUsers",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of team users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team_user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "team"
        ],
        "summary": "Update user perms for team",
        "operationId": "PermitTeamUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to update",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "team"
        ],
        "summary": "Assign a user to team",
        "operationId": "AppendTeamToUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to assign",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is already assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team"
        ],
        "summary": "Remove a user from team",
        "operationId": "DeleteTeamFromUser",
        "parameters": [
          {
            "type": "string",
            "description": "A team UUID or slug",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The team user data to delete",
            "name": "team_user",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "user_id"
              ],
              "$ref": "#/definitions/team_user_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "Team or user not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "User is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch all available users",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A collection of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "The user data to create",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "password",
                "email"
              ],
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created user data",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch a specific user",
        "operationId": "ShowUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fetched user details",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a specific user",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user data to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated user details",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete a specific user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "400": {
            "description": "Failed to delete the user",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    },
    "/users/{user_id}/teams": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch all teams assigned to user",
        "operationId": "ListUserTeams",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of user teams",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/team_user"
              }
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update team perms for user",
        "operationId": "PermitUserTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to update",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Assign a team to user",
        "operationId": "AppendUserToTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to assign",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is already assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "422": {
            "description": "Failed to validate request",
            "schema": {
              "$ref": "#/definitions/validation_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Remove a team from user",
        "operationId": "DeleteUserFromTeam",
        "parameters": [
          {
            "type": "string",
            "description": "A user UUID or slug",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "description": "The user team data to delete",
            "name": "user_team",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "team_id"
              ],
              "$ref": "#/definitions/user_team_params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plain success message",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "403": {
            "description": "User is not authorized",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "404": {
            "description": "User or team not found",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "412": {
            "description": "Team is not assigned",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          },
          "default": {
            "description": "Some error unrelated to the handler",
            "schema": {
              "$ref": "#/definitions/general_error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ValidationErrorErrorsItems0": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "auth_login": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "format": "password"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "auth_token": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "token": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "auth_verify": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "username": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "general_error": {
      "description": "General error for regular HTTP status codes",
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "profile": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "readOnly": true
        },
        "admin": {
          "type": "boolean",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "team": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        }
      }
    },
    "team_user": {
      "type": "object",
      "required": [
        "team_id",
        "user_id",
        "perm"
      ],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "team": {
          "type": "object",
          "$ref": "#/definitions/team",
          "readOnly": true
        },
        "team_id": {
          "type": "string",
          "format": "uuid"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user": {
          "type": "object",
          "$ref": "#/definitions/user",
          "readOnly": true
        },
        "user_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "team_user_params": {
      "type": "object",
      "required": [
        "user",
        "perm"
      ],
      "properties": {
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "user": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": true
        },
        "admin": {
          "type": "boolean",
          "x-nullable": true,
          "x-omitempty": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "x-nullable": true,
          "x-omitempty": true
        },
        "slug": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_user"
          },
          "x-nullable": true,
          "x-omitempty": true,
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "user_team_params": {
      "type": "object",
      "required": [
        "team",
        "perm"
      ],
      "properties": {
        "perm": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "owner"
          ]
        },
        "team": {
          "type": "string"
        }
      }
    },
    "validation_error": {
      "description": "Validation error which shows failed fields",
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationErrorErrorsItems0"
          }
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "Header": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "Basic": []
    },
    {
      "Header": []
    }
  ]
}`))
}
