// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UserTeamPermHandlerFunc turns a function with the right signature into a user team perm handler
type UserTeamPermHandlerFunc func(UserTeamPermParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UserTeamPermHandlerFunc) Handle(params UserTeamPermParams) middleware.Responder {
	return fn(params)
}

// UserTeamPermHandler interface for that can handle valid user team perm params
type UserTeamPermHandler interface {
	Handle(UserTeamPermParams) middleware.Responder
}

// NewUserTeamPerm creates a new http.Handler for the user team perm operation
func NewUserTeamPerm(ctx *middleware.Context, handler UserTeamPermHandler) *UserTeamPerm {
	return &UserTeamPerm{Context: ctx, Handler: handler}
}

/*UserTeamPerm swagger:route PUT /users/{userID}/teams user userTeamPerm

Update team perms for user

*/
type UserTeamPerm struct {
	Context *middleware.Context
	Handler UserTeamPermHandler
}

func (o *UserTeamPerm) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUserTeamPermParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
