// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/gopad/gopad-api/pkg/api/v1/models"
)

// UserCreateOKCode is the HTTP code returned for type UserCreateOK
const UserCreateOKCode int = 200

/*UserCreateOK The created user data

swagger:response userCreateOK
*/
type UserCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewUserCreateOK creates UserCreateOK with default headers values
func NewUserCreateOK() *UserCreateOK {

	return &UserCreateOK{}
}

// WithPayload adds the payload to the user create o k response
func (o *UserCreateOK) WithPayload(payload *models.User) *UserCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create o k response
func (o *UserCreateOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserCreateForbiddenCode is the HTTP code returned for type UserCreateForbidden
const UserCreateForbiddenCode int = 403

/*UserCreateForbidden User is not authorized

swagger:response userCreateForbidden
*/
type UserCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserCreateForbidden creates UserCreateForbidden with default headers values
func NewUserCreateForbidden() *UserCreateForbidden {

	return &UserCreateForbidden{}
}

// WithPayload adds the payload to the user create forbidden response
func (o *UserCreateForbidden) WithPayload(payload *models.GeneralError) *UserCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create forbidden response
func (o *UserCreateForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserCreatePreconditionFailedCode is the HTTP code returned for type UserCreatePreconditionFailed
const UserCreatePreconditionFailedCode int = 412

/*UserCreatePreconditionFailed Failed to parse request body

swagger:response userCreatePreconditionFailed
*/
type UserCreatePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserCreatePreconditionFailed creates UserCreatePreconditionFailed with default headers values
func NewUserCreatePreconditionFailed() *UserCreatePreconditionFailed {

	return &UserCreatePreconditionFailed{}
}

// WithPayload adds the payload to the user create precondition failed response
func (o *UserCreatePreconditionFailed) WithPayload(payload *models.GeneralError) *UserCreatePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create precondition failed response
func (o *UserCreatePreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreatePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserCreateUnprocessableEntityCode is the HTTP code returned for type UserCreateUnprocessableEntity
const UserCreateUnprocessableEntityCode int = 422

/*UserCreateUnprocessableEntity Failed to validate request

swagger:response userCreateUnprocessableEntity
*/
type UserCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ValidationError `json:"body,omitempty"`
}

// NewUserCreateUnprocessableEntity creates UserCreateUnprocessableEntity with default headers values
func NewUserCreateUnprocessableEntity() *UserCreateUnprocessableEntity {

	return &UserCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the user create unprocessable entity response
func (o *UserCreateUnprocessableEntity) WithPayload(payload *models.ValidationError) *UserCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create unprocessable entity response
func (o *UserCreateUnprocessableEntity) SetPayload(payload *models.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserCreateDefault Some error unrelated to the handler

swagger:response userCreateDefault
*/
type UserCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserCreateDefault creates UserCreateDefault with default headers values
func NewUserCreateDefault(code int) *UserCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &UserCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user create default response
func (o *UserCreateDefault) WithStatusCode(code int) *UserCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user create default response
func (o *UserCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user create default response
func (o *UserCreateDefault) WithPayload(payload *models.GeneralError) *UserCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user create default response
func (o *UserCreateDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
