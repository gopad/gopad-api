// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/gopad/gopad-api/pkg/api/v1/models"
)

// UserDeleteOKCode is the HTTP code returned for type UserDeleteOK
const UserDeleteOKCode int = 200

/*UserDeleteOK Plain success message

swagger:response userDeleteOK
*/
type UserDeleteOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserDeleteOK creates UserDeleteOK with default headers values
func NewUserDeleteOK() *UserDeleteOK {

	return &UserDeleteOK{}
}

// WithPayload adds the payload to the user delete o k response
func (o *UserDeleteOK) WithPayload(payload *models.GeneralError) *UserDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user delete o k response
func (o *UserDeleteOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserDeleteBadRequestCode is the HTTP code returned for type UserDeleteBadRequest
const UserDeleteBadRequestCode int = 400

/*UserDeleteBadRequest Failed to delete the user

swagger:response userDeleteBadRequest
*/
type UserDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserDeleteBadRequest creates UserDeleteBadRequest with default headers values
func NewUserDeleteBadRequest() *UserDeleteBadRequest {

	return &UserDeleteBadRequest{}
}

// WithPayload adds the payload to the user delete bad request response
func (o *UserDeleteBadRequest) WithPayload(payload *models.GeneralError) *UserDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user delete bad request response
func (o *UserDeleteBadRequest) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserDeleteForbiddenCode is the HTTP code returned for type UserDeleteForbidden
const UserDeleteForbiddenCode int = 403

/*UserDeleteForbidden User is not authorized

swagger:response userDeleteForbidden
*/
type UserDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserDeleteForbidden creates UserDeleteForbidden with default headers values
func NewUserDeleteForbidden() *UserDeleteForbidden {

	return &UserDeleteForbidden{}
}

// WithPayload adds the payload to the user delete forbidden response
func (o *UserDeleteForbidden) WithPayload(payload *models.GeneralError) *UserDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user delete forbidden response
func (o *UserDeleteForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserDeleteDefault Some error unrelated to the handler

swagger:response userDeleteDefault
*/
type UserDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewUserDeleteDefault creates UserDeleteDefault with default headers values
func NewUserDeleteDefault(code int) *UserDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &UserDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user delete default response
func (o *UserDeleteDefault) WithStatusCode(code int) *UserDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user delete default response
func (o *UserDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user delete default response
func (o *UserDeleteDefault) WithPayload(payload *models.GeneralError) *UserDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user delete default response
func (o *UserDeleteDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
