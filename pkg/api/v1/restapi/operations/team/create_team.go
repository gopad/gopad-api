// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateTeamHandlerFunc turns a function with the right signature into a create team handler
type CreateTeamHandlerFunc func(CreateTeamParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateTeamHandlerFunc) Handle(params CreateTeamParams) middleware.Responder {
	return fn(params)
}

// CreateTeamHandler interface for that can handle valid create team params
type CreateTeamHandler interface {
	Handle(CreateTeamParams) middleware.Responder
}

// NewCreateTeam creates a new http.Handler for the create team operation
func NewCreateTeam(ctx *middleware.Context, handler CreateTeamHandler) *CreateTeam {
	return &CreateTeam{Context: ctx, Handler: handler}
}

/*CreateTeam swagger:route POST /teams team createTeam

Create a new team

*/
type CreateTeam struct {
	Context *middleware.Context
	Handler CreateTeamHandler
}

func (o *CreateTeam) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateTeamParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
