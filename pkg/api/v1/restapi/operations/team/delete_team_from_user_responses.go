// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gopad/gopad-api/pkg/api/v1/models"
)

// DeleteTeamFromUserOKCode is the HTTP code returned for type DeleteTeamFromUserOK
const DeleteTeamFromUserOKCode int = 200

/*DeleteTeamFromUserOK Plain success message

swagger:response deleteTeamFromUserOK
*/
type DeleteTeamFromUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromUserOK creates DeleteTeamFromUserOK with default headers values
func NewDeleteTeamFromUserOK() *DeleteTeamFromUserOK {

	return &DeleteTeamFromUserOK{}
}

// WithPayload adds the payload to the delete team from user o k response
func (o *DeleteTeamFromUserOK) WithPayload(payload *models.GeneralError) *DeleteTeamFromUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from user o k response
func (o *DeleteTeamFromUserOK) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromUserForbiddenCode is the HTTP code returned for type DeleteTeamFromUserForbidden
const DeleteTeamFromUserForbiddenCode int = 403

/*DeleteTeamFromUserForbidden User is not authorized

swagger:response deleteTeamFromUserForbidden
*/
type DeleteTeamFromUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromUserForbidden creates DeleteTeamFromUserForbidden with default headers values
func NewDeleteTeamFromUserForbidden() *DeleteTeamFromUserForbidden {

	return &DeleteTeamFromUserForbidden{}
}

// WithPayload adds the payload to the delete team from user forbidden response
func (o *DeleteTeamFromUserForbidden) WithPayload(payload *models.GeneralError) *DeleteTeamFromUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from user forbidden response
func (o *DeleteTeamFromUserForbidden) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromUserNotFoundCode is the HTTP code returned for type DeleteTeamFromUserNotFound
const DeleteTeamFromUserNotFoundCode int = 404

/*DeleteTeamFromUserNotFound Team or user not found

swagger:response deleteTeamFromUserNotFound
*/
type DeleteTeamFromUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromUserNotFound creates DeleteTeamFromUserNotFound with default headers values
func NewDeleteTeamFromUserNotFound() *DeleteTeamFromUserNotFound {

	return &DeleteTeamFromUserNotFound{}
}

// WithPayload adds the payload to the delete team from user not found response
func (o *DeleteTeamFromUserNotFound) WithPayload(payload *models.GeneralError) *DeleteTeamFromUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from user not found response
func (o *DeleteTeamFromUserNotFound) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteTeamFromUserPreconditionFailedCode is the HTTP code returned for type DeleteTeamFromUserPreconditionFailed
const DeleteTeamFromUserPreconditionFailedCode int = 412

/*DeleteTeamFromUserPreconditionFailed User is not assigned

swagger:response deleteTeamFromUserPreconditionFailed
*/
type DeleteTeamFromUserPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromUserPreconditionFailed creates DeleteTeamFromUserPreconditionFailed with default headers values
func NewDeleteTeamFromUserPreconditionFailed() *DeleteTeamFromUserPreconditionFailed {

	return &DeleteTeamFromUserPreconditionFailed{}
}

// WithPayload adds the payload to the delete team from user precondition failed response
func (o *DeleteTeamFromUserPreconditionFailed) WithPayload(payload *models.GeneralError) *DeleteTeamFromUserPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from user precondition failed response
func (o *DeleteTeamFromUserPreconditionFailed) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromUserPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteTeamFromUserDefault Some error unrelated to the handler

swagger:response deleteTeamFromUserDefault
*/
type DeleteTeamFromUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GeneralError `json:"body,omitempty"`
}

// NewDeleteTeamFromUserDefault creates DeleteTeamFromUserDefault with default headers values
func NewDeleteTeamFromUserDefault(code int) *DeleteTeamFromUserDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTeamFromUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete team from user default response
func (o *DeleteTeamFromUserDefault) WithStatusCode(code int) *DeleteTeamFromUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete team from user default response
func (o *DeleteTeamFromUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete team from user default response
func (o *DeleteTeamFromUserDefault) WithPayload(payload *models.GeneralError) *DeleteTeamFromUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete team from user default response
func (o *DeleteTeamFromUserDefault) SetPayload(payload *models.GeneralError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTeamFromUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
