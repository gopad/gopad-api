---
kind: pipeline
name: general

platform:
  os: linux
  arch: amd64

steps:
- name: generate
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make generate
  volumes:
  - name: gopath
    path: /srv/app

- name: vet
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make vet
  volumes:
  - name: gopath
    path: /srv/app

- name: staticcheck
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make staticcheck
  volumes:
  - name: gopath
    path: /srv/app

- name: lint
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make lint
  volumes:
  - name: gopath
    path: /srv/app

- name: test
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make test
  volumes:
  - name: gopath
    path: /srv/app

- name: build
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make build
  volumes:
  - name: gopath
    path: /srv/app

volumes:
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: linux

platform:
  os: linux
  arch: amd64

steps:
- name: generate
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make generate
  volumes:
  - name: gopath
    path: /srv/app

- name: build
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-dirs release-linux
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - generate

- name: finish
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-finish
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - build

- name: gpgsign
  image: plugins/gpgsign:1
  pull: always
  settings:
    key:
      from_secret: gpgsign_key
    passphrase:
      from_secret: gpgsign_passphrase
    files:
      - dist/release/*
    excludes:
      - dist/release/*.sha256
    detach_sign: true
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: upload-push
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/testing
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - push
  depends_on:
  - gpgsign

- name: upload-tag
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/${DRONE_TAG##v}
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - tag
  depends_on:
  - gpgsign

- name: release
  image: plugins/github-release:1
  pull: always
  settings:
    api_key:
      from_secret: github_token
    files:
    - dist/release/*
  when:
    event:
    - tag
  depends_on:
  - gpgsign

- name: amd64
  pull: always
  image: plugins/docker:18.09
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    auto_tag: true
    auto_tag_suffix: linux-amd64
    dockerfile: docker/Dockerfile.linux.amd64
    repo: gopad/gopad-api
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: i386
  pull: always
  image: plugins/docker:18.09
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    auto_tag: true
    auto_tag_suffix: linux-i386
    dockerfile: docker/Dockerfile.linux.i386
    repo: gopad/gopad-api
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: arm64v8
  pull: always
  image: plugins/docker:18.09
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    auto_tag: true
    auto_tag_suffix: linux-arm64v8
    dockerfile: docker/Dockerfile.linux.arm64v8
    repo: gopad/gopad-api
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: arm32v6
  pull: always
  image: plugins/docker:18.09
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    auto_tag: true
    auto_tag_suffix: linux-arm32v6
    dockerfile: docker/Dockerfile.linux.arm32v6
    repo: gopad/gopad-api
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: manifest
  pull: always
  image: plugins/manifest:1
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: docker/manifest.tmpl
    auto_tag: true
    ignore_missing: true
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - amd64
  - i386
  - arm64v8
  - arm32v6

- name: microbadger
  image: plugins/webhook:1
  pull: always
  settings:
    urls:
      from_secret: microbadger_token
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - manifest

volumes:
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: windows

platform:
  os: linux
  arch: amd64

steps:
- name: generate
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make generate
  volumes:
  - name: gopath
    path: /srv/app

- name: build
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-dirs release-windows
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - generate

- name: finish
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-finish
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - build

- name: gpgsign
  image: plugins/gpgsign:1
  pull: always
  settings:
    key:
      from_secret: gpgsign_key
    passphrase:
      from_secret: gpgsign_passphrase
    files:
      - dist/release/*
    excludes:
      - dist/release/*.sha256
    detach_sign: true
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: upload-push
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/testing
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - push
  depends_on:
  - gpgsign

- name: upload-tag
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/${DRONE_TAG##v}
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - tag
  depends_on:
  - gpgsign

- name: release
  image: plugins/github-release:1
  pull: always
  settings:
    api_key:
      from_secret: github_token
    files:
    - dist/release/*
  when:
    event:
    - tag
  depends_on:
  - gpgsign

volumes:
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: darwin

platform:
  os: linux
  arch: amd64

steps:
- name: generate
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make generate
  volumes:
  - name: gopath
    path: /srv/app

- name: build
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-dirs release-darwin
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - generate

- name: finish
  image: webhippie/golang:1.12
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make release-finish
  volumes:
  - name: gopath
    path: /srv/app
  depends_on:
  - build

- name: gpgsign
  image: plugins/gpgsign:1
  pull: always
  settings:
    key:
      from_secret: gpgsign_key
    passphrase:
      from_secret: gpgsign_passphrase
    files:
      - dist/release/*
    excludes:
      - dist/release/*.sha256
    detach_sign: true
  when:
    event:
      exclude:
      - pull_request
  depends_on:
  - finish

- name: upload-push
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/testing
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - push
  depends_on:
  - gpgsign

- name: upload-tag
  image: plugins/s3:1
  pull: always
  settings:
    endpoint:
      from_secret: s3_endpoint
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    bucket:
      from_secret: s3_bucket
    source: dist/release/*
    target: /api/${DRONE_TAG##v}
    strip_prefix: dist/release/
    path_style: true
  when:
    event:
    - tag
  depends_on:
  - gpgsign

- name: release
  image: plugins/github-release:1
  pull: always
  settings:
    api_key:
      from_secret: github_token
    files:
    - dist/release/*
  when:
    event:
    - tag
  depends_on:
  - gpgsign

volumes:
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: notification

platform:
  os: linux
  arch: amd64

steps:
- name: notify
  image: plugins/matrix:1
  pull: always
  settings:
    username:
      from_secret: matrix_username
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid

depends_on:
- general
- linux
- windows
- darwin

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  status:
  - changed
  - failure

...
